{"remainingRequest":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/babel-loader/lib/index.js!/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/src/views/Home.vue","mtime":1640663111437},{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/babel.config.js","mtime":1640157866437},{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/admin/GettingThingsDone/Vue-JS-Crash-Course/vue3/vue-creash-2022/src/views/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n      <AddTask\n        v-show=\"showAddTask\"\n        @add-task=\"addTask\" \n      />\n    <Tasks \n      @delete-task=\"deleteTask\" \n      :tasks=\"tasks\"\n      @toggle-reminder=\"toggleReminder\"\n    />\n</template>s\n\n<script>\n    import Tasks from '../components/Tasks.vue';\n    import AddTask from '../components/AddTask.vue';\n\n    export default {\n        name: 'Home',\n        props: {\n            showAddTask: {\n                type: Boolean\n            }\n        },\n        components: {\n            Tasks,\n            AddTask\n        },\n        data() {\n            return {\n                tasks: [],\n            }\n        },\n        methods: {\n            async addTask(task) {\n\n                const res  = await fetch('api/tasks', {\n                    method: 'POST',\n                    headers: {\n                    'Content-type' : 'application/json',\n                    },\n                    body: JSON.stringify(task),\n                });\n\n                const data = await res.json();\n                this.tasks = [...this.tasks, data];\n            },\n\n            async deleteTask(id) {\n            \n                if (confirm(\"Are you sure?\")) {\n                    const res = await fetch(`api/tasks/${id}`, {\n                    method: 'DELETE',\n                    });\n\n                    if (res.status === 200) {\n                        this.tasks = this.tasks.filter((task) => task.id !== id)\n                    } else {\n                        alert(\"Error deleting task!\");\n                    }\n                }\n            },\n\n            async toggleReminder(id) {\n                const taskToggle = await this.fetchTask(id);\n                const upTask = {...taskToggle, reminder: !taskToggle.reminder};\n                const res = await fetch(`api/tasks/${id}`, {\n                    method: 'PUT',\n                    headers: {\n                        'Content-type' : 'application/json'\n                    },\n                    body: JSON.stringify(upTask),\n                });\n\n                const data = res.json();\n\n                this.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task)\n            },\n            \n            async fetchTasks() {\n                const res = await fetch(\"api/tasks\");\n\n                const data = await res.json();\n\n                return data;\n            },\n\n            async fetchTask(id) {\n                const res = await fetch(`api/tasks/${id}`);\n\n                const data = await res.json();\n\n                return data;\n            },\n        },\n        async created() {\n            this.tasks = await this.fetchTasks();\n        }\n    }\n</script>"],"sourceRoot":""}]}